# core/telegram.py
import html
import requests
from typing import Optional
from config import TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID

_API_BASE = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}" if TELEGRAM_BOT_TOKEN else None

def _ensure():
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        raise RuntimeError("TELEGRAM_BOT_TOKEN/TELEGRAM_CHAT_ID not configured")

def esc(s: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è parse_mode=HTML."""
    return html.escape(s or "", quote=False)

def _post(method: str, data: dict, files: Optional[dict] = None):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram Bot API.
    - –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º form-encoded (data).
    - –î–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Äî multipart (files + data).
    """
    _ensure()
    url = f"{_API_BASE}/{method}"
    if files:
        r = requests.post(url, data=data, files=files, timeout=20)
    else:
        r = requests.post(url, data=data, timeout=20)
    try:
        print(f"[TELEGRAM] {method} -> {r.status_code}")
    except Exception:
        pass
    r.raise_for_status()
    return r.json()

def send_text(text: str, parse_mode: str = "HTML"):
    """–ë–∞–∑–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é HTML). –¢–µ–∫—Å—Ç –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ esc()."""
    data = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": text,
        "parse_mode": parse_mode,
        "disable_web_page_preview": True,
    }
    return _post("sendMessage", data)

def send_info(text: str):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (‚ÑπÔ∏è)."""
    return send_text(f"‚ÑπÔ∏è {text}", parse_mode="HTML")

def send_warning(text: str):
    """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (‚ö†Ô∏è)."""
    return send_text(f"‚ö†Ô∏è {text}", parse_mode="HTML")

def send_error(text: str):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ (üõë)."""
    return send_text(f"üõë {text}", parse_mode="HTML")

def send_document(filename: str, content: bytes, caption: Optional[str] = None, parse_mode: str = "HTML"):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, CSV) —Å –ø–æ–¥–ø–∏—Å—å—é."""
    files = {
        "document": (filename, content, "text/csv")
    }
    data = {
        "chat_id": TELEGRAM_CHAT_ID,
        "parse_mode": parse_mode,
    }
    if caption:
        data["caption"] = caption
    return _post("sendDocument", data=data, files=files)
